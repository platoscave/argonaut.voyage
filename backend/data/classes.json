[
  {
    "key": "universe",
    "title": "Process Universe",
    "description": "The root of all classes and objects",
    "properties": {
      "key": {
        "description": "Base32 identifier.",
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "title": "key",
        "type": "string"
      },
      "name": {
        "placeholder": "Provide a name",
        "maxLength": 1000,
        "minLength": 0,
        "title": "Name",
        "type": "string"
      },
      "classId": {
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "argoQuery": {
          "selector": "Subclasses",
          "where": {
            "classId": "universe"
          },
          "sortBy": "title"
        },
        "title": "Class",
        "type": "string"
      },
      "description": {
        "placholder": "Add a description",
        "maxLength": 10000,
        "contentMediaType": "text/html",
        "minLength": 0,
        "title": "Description",
        "type": "string"
      },
      "icon": {
        "maxLength": 2000,
        "contentMediaType": "image/svg+xml",
        "minLength": 0,
        "title": "Icon",
        "type": "string"
      }
    },
    "required": [
      "key",
      "classId"
    ],
    "type": "object",
    "additionalProperties": false,
    "additionalProperties": false,
    "classIcon": "ProcessUniverse.svg"
  },
  {
    "key": "agreements",
    "title": "Agreements",
    "description": "Contracts between accounts about resources",
    "classIcon": "Agreements.svg",
    "superClassId": "universe",
    "properties": {
      "startDate": {
        "title": "Request Date",
        "type": "string"
      },
      "expirationDate": {
        "title": "Expiration Date",
        "type": "string"
      },
      "amount": {
        "title": "Amount",
        "type": "number"
      },
      "currency": {
        "title": "Currency",
        "type": "string"
      },
      "consumerId": {
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "argoQuery": {
          "selector": "Insatnces Of",
          "where": {
            "classId": "accounts"
          },
          "idsArrayPath": {
            "path": "$[*].key",
            "indexName": "classId"
          },
          "sortBy": "name"
        },
        "title": "Consumer",
        "type": "string"
      },
      "providerId": {
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "argoQuery": {
          "selector": "Insatnces Of",
          "where": {
            "classId": "accounts"
          },
          "idsArrayPath": {
            "path": "$[*].key",
            "indexName": "classId"
          },
          "sortBy": "name"
        },
        "title": "Provider",
        "type": "string"
      },
      "assetId": {
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "argoQuery": {
          "selector": "Insatnces Of",
          "where": {
            "classId": "assets"
          },
          "idsArrayPath": {
            "path": "$[*].key",
            "indexName": "classId"
          },
          "sortBy": "name"
        },
        "title": "Asset",
        "type": "string"
      },
      "propositionId": {
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "argoQuery": {
          "selector": "Insatnces Of",
          "where": {
            "classId": "processes"
          },
          "idsArrayPath": {
            "path": "$[*].key",
            "indexName": "classId"
          },
          "sortBy": "name"
        },
        "title": "Agreememt Process",
        "type": "string"
      },
      "currentStepId": {
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "argoQuery": {
          "selector": "Insatnces Of",
          "where": {
            "classId": "steps"
          },
          "idsArrayPath": {
            "path": "$[*].key",
            "indexName": "classId"
          },
          "sortBy": "name"
        },
        "title": "Step",
        "type": "string"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "purchase-agree",
    "title": "Purchase Agreements",
    "description": "Contracts between accounts about resources",
    "classIcon": "Agreements.svg",
    "superClassId": "agreements",
    "properties": {
      "recardianContract": {
        "const": "Purchase Agreement'${locationStr}${providerId}.smaraspaled'${providerName} promises to deliver '${locationStr}${assestId}.smaraspaled'${assetName} to '${locationStr}${consumerId}.smaraspaled'${consumerName} by ${expirationDate} for the amount of ${amount} ${currency}Proposition: '${locationStr}${propositionId}.smaraspaled'${propositionName}  Process: '${locationStr}${processId}.smaraspaled'${processName}  Current Step: '${locationStr}${currentStepId}.smaraspaled'${currentStepName}  ",
        "title": "Recardian Contract",
        "contentMediaType": "text/html",
        "type": "string"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "rental-agree",
    "title": "Rental Agreements",
    "description": "Contracts between accounts about resources",
    "classIcon": "Agreements.svg",
    "superClassId": "agreements",
    "properties": {
      "recardianContract": {
        "const": "Rental Agreement'${locationStr}${providerId}.smaraspaled'${providerName} promises to deliver '${locationStr}${assestId}.smaraspaled'${assetName} to '${locationStr}${consumerId}.smaraspaled'${consumerName} by ${expirationDate} for the amount of ${amount} ${currency}Proposition: '${locationStr}${propositionId}.smaraspaled'${propositionName}  Process: '${locationStr}${processId}.smaraspaled'${processName}  Current Step: '${locationStr}${currentStepId}.smaraspaled'${currentStepName}  ",
        "title": "Recardian Contract",
        "contentMediaType": "text/html",
        "type": "string"
      },
      "unitOfTime": {
        "enum": [
          "Half Day",
          "Day",
          "Week",
          "Month",
          "Year"
        ],
        "title": "Duration",
        "type": "string"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "service-agree",
    "title": "Service Agreements",
    "description": "Contracts between accounts about resources",
    "classIcon": "Agreements.svg",
    "superClassId": "agreements",
    "properties": {
      "recardianContract": {
        "const": "Service Agreement'${locationStr}${providerId}.smaraspaled'${providerName} promises to deliver '${locationStr}${assestId}.smaraspaled'${assetName} to '${locationStr}${consumerId}.smaraspaled'${consumerName} by ${expirationDate} for the amount of ${amount} ${currency}Proposition: '${locationStr}${propositionId}.smaraspaled'${propositionName}  Process: '${locationStr}${processId}.smaraspaled'${processName}  Current Step: '${locationStr}${currentStepId}.smaraspaled'${currentStepName}  ",
        "title": "Recardian Contract",
        "contentMediaType": "text/html",
        "type": "string"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "message-agree",
    "title": "Message Agreements",
    "description": "Contracts between accounts about resources",
    "classIcon": "Agreements.svg",
    "superClassId": "agreements",
    "properties": {
      "recardianContract": {
        "const": "Message Agreement'${locationStr}${providerId}.smaraspaled'${providerName} promises to deliver '${locationStr}${assestId}.smaraspaled'${assetName} to '${locationStr}${consumerId}.smaraspaled'${consumerName} by ${expirationDate} for the amount of ${amount} ${currency}Proposition: '${locationStr}${propositionId}.smaraspaled'${propositionName}  Process: '${locationStr}${processId}.smaraspaled'${processName}  Current Step: '${locationStr}${currentStepId}.smaraspaled'${currentStepName}  ",
        "title": "Recardian Contract",
        "contentMediaType": "text/html",
        "type": "string"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "accounts",
    "title": "Accounts",
    "superClassId": "universe",
    "ownerId": "argonaut",
    "properties": {
      "pageId": {
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "argoQuery": {
          "selector": "Insatnces Of",
          "where": {
            "classId": "pages"
          },
          "idsArrayPath": {
            "path": "$[*].key",
            "indexName": "classId"
          },
          "sortBy": "name"
        },
        "title": "Page",
        "type": "string"
      },
      "subParagraphIds": {
        "items": {
          "argoQuery": {
            "selector": "Insatnces Of",
            "where": {
              "classId": "paragraphs"
            },
            "idsArrayPath": {
              "path": "$[*].key",
              "indexName": "classId"
            }
          },
          "title": "Sub Ducument",
          "type": "string"
        },
        "title": "First Paragraphs",
        "type": "array"
      }
    },
    "query": "get_account_info",
    "type": "object",
    "additionalProperties": false,
    "classIcon": "Accounts.svg"
  },
  {
    "key": "resources",
    "title": "Resources",
    "description": "Things owned by users/organizations",
    "superClassId": "universe",
    "properties": {
      "ownerId": {
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "argoQuery": {
          "selector": "Insatnces Of",
          "where": {
            "classId": "accounts"
          },
          "idsArrayPath": {
            "path": "$[*].key",
            "indexName": "classId"
          },
          "sortBy": "name"
        },
        "title": "Owner",
        "type": "string"
      }
    },
    "required": [
      "ownerId"
    ],
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "org-units",
    "title": "Organizational Units",
    "description": "NEEDS FIXING Organizational units owned by organizations",
    "classIcon": "OrganizationalUnits.svg",
    "superClassId": "accounts",
    "properties": {
      "ownerId": {
        "type": "string"
      },
      "parentOrgId": {
        "type": "string"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "users",
    "title": "Users",
    "description": "Users own resourses",
    "classIcon": "Users.svg",
    "superClassId": "accounts",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "organizations",
    "title": "Organizations",
    "description": "Organizations owned by users/organizations",
    "superClassId": "accounts",
    "properties": {
      "description": {
        "title": "What",
        "placeholder": "[What do you do that is different?]"
      },
      "how": {
        "placeholder": "[How do you achive your goal?]",
        "maxLength": 10000,
        "contentMediaType": "text/html",
        "minLength": 0,
        "title": "How",
        "type": "string"
      },
      "why": {
        "placeholder": "[Vision]",
        "maxLength": 10000,
        "contentMediaType": "text/html",
        "minLength": 0,
        "title": "Why",
        "type": "string"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "balance-sheet",
    "title": "Balance Sheet",
    "description": "Balance sheet owned by users/organizations",
    "classIcon": "BalanceSheet.svg",
    "superClassId": "resources",
    "properties": {
      "value": {
        "title": "Value",
        "type": "number"
      },
      "currency": {
        "enum": [
          "EUR",
          "USD"
        ],
        "title": "Currency",
        "type": "string"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "off-sheet",
    "title": "Off Balance Sheet",
    "description": "Other things owned by users/organizations",
    "superClassId": "resources",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "features",
    "title": "Features",
    "classIcon": "Features.svg",
    "superClassId": "off-sheet",
    "properties": {},
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "non-profit",
    "title": "Non-Profit",
    "description": "Non-profit organizations",
    "superClassId": "organizations",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "goverment",
    "title": "Goverment",
    "description": "Goverment",
    "superClassId": "organizations",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "commercial",
    "title": "Commercial",
    "description": "Commercial organizations",
    "superClassId": "organizations",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "assets",
    "title": "Assets",
    "description": "Assets owned by users/organizations",
    "superClassId": "balance-sheet",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "liabil-equity",
    "title": "Liabilities and Stockholder's Equity",
    "description": "Liabilities owned by users/organizations",
    "superClassId": "balance-sheet",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "steps",
    "title": "Steps",
    "description": "Steps",
    "classIcon": "Steps.svg",
    "superClassId": "off-sheet",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "processes",
    "title": "Processes",
    "description": "Processes",
    "classIcon": "Processes.svg",
    "superClassId": "off-sheet",
    "properties": {
      "returnActions": {
        "title": "Return Actions",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "firstStepId": {
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "argoQuery": {
          "selector": "Insatnces Of",
          "where": {
            "classId": "open"
          },
          "idsArrayPath": {
            "path": "$[*].key",
            "indexName": "classId"
          },
          "sortBy": "name"
        },
        "title": "First Step",
        "type": "string"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "sub-processes",
    "title": "Sub-Processes",
    "description": "Processes",
    "classIcon": "Processes.svg",
    "superClassId": "off-sheet",
    "properties": {
      "returnActions": {
        "title": "Return Actions",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "firstStepId": {
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "argoQuery": {
          "selector": "Insatnces Of",
          "where": {
            "classId": "open"
          },
          "idsArrayPath": {
            "path": "$[*].key",
            "indexName": "classId"
          },
          "sortBy": "name"
        },
        "title": "First Step",
        "type": "string"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "propositions",
    "title": "Propositions",
    "description": "Proposition",
    "classIcon": "Propositions.svg",
    "superClassId": "off-sheet",
    "properties": {
      "startDate": {
        "title": "Start Date",
        "type": "string",
        "format": "date-time"
      },
      "endDate": {
        "title": "End Date",
        "type": "string",
        "format": "date-time"
      },
      "processId": {
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "argoQuery": {
          "selector": "Insatnces Of",
          "where": {
            "classId": "processes"
          },
          "idsArrayPath": {
            "path": "$[*].key",
            "indexName": "classId"
          },
          "sortBy": "name"
        },
        "title": "Process",
        "type": "string"
      },
      "subprocessId": {
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "argoQuery": {
          "selector": "Insatnces Of",
          "where": {
            "classId": "sub-processes"
          },
          "idsArrayPath": {
            "path": "$[*].key",
            "indexName": "classId"
          },
          "sortBy": "name"
        },
        "title": "Subrocess",
        "type": "string"
      },
      "assetIds": {
        "title": "Assets",
        "items": {
          "pattern": "[a-z][a-z0-9-]{0,17}",
          "argoQuery": {
            "selector": "Insatnces Of",
            "where": {
              "classId": "assets"
            },
            "idsArrayPath": {
              "path": "$[*].key",
              "indexName": "classId"
            }
          },
          "title": "Deligate to Process",
          "type": "string"
        },
        "type": "array"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "repair-prop",
    "title": "Repair Proposition",
    "description": "Repair Agreements between owners",
    "superClassId": "propositions",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "purchase-prop",
    "title": "Purchase Proposition",
    "description": "Purchase Agreements between owners",
    "superClassId": "propositions",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "rental-prop",
    "title": "Rental Proposition",
    "description": "Rental Agreements between owners",
    "superClassId": "propositions",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "messaging-prop",
    "title": "Messaging Proposition",
    "description": "Messaging Agreements between owners",
    "superClassId": "propositions",
    "properties": {
      "classification": {
        "enum": [
          "Question",
          "Defect",
          "Enhancement"
        ],
        "title": "Classification",
        "type": "string"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "member-prop",
    "title": "Membership Proposition",
    "superClassId": "propositions",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "pages",
    "title": "Pages",
    "description": "Describes the Tab-Widget-View Reference structure",
    "classIcon": "Layouts.svg",
    "superClassId": "off-sheet",
    "properties": {
      "layout": {
        "enum": [
          "Page",
          "Master Detail",
          "Studio"
        ],
        "title": "Layout",
        "type": "string"
      },
      "divider": {
        "enum": [
          "Vertical",
          "Horizontal"
        ],
        "title": "Divider",
        "type": "string"
      },
      "model": {
        "enum": [
          "Mind Palace ",
          "Class Model",
          "Process Model"
        ],
        "title": "Model",
        "type": "string"
      },
      "tabs": {
        "description": "",
        "additionalItems": true,
        "items": {
          "properties": {
            "name": {
              "placeholder": "Provide a name",
              "maxLength": 1000,
              "title": "Tab Name",
              "type": "string"
            },
            "description": {
              "placholder": "Add a description",
              "maxLength": 10000,
              "contentMediaType": "text/html",
              "title": "Description",
              "type": "string"
            },
            "pageId": {
              "pattern": "[a-z][a-z0-9-]{0,17}",
              "argoQuery": {
                "selector": "Insatnces Of",
                "where": {
                  "classId": "pages"
                },
                "idsArrayPath": {
                  "path": "$[*].key",
                  "indexName": "classId"
                },
                "sortBy": "name"
              },
              "title": "Page",
              "type": "string"
            },
            "widgets": {
              "additionalItems": true,
              "items": {
                "properties": {
                  "name": {
                    "placeholder": "Provide a name",
                    "maxLength": 1000,
                    "title": "Name",
                    "type": "string"
                  },
                  "description": {
                    "placholder": "Add a description",
                    "maxLength": 10000,
                    "contentMediaType": "text/html",
                    "title": "Description",
                    "type": "string"
                  },
                  "widgetType": {
                    "default": "Schema Form",
                    "enum": [
                      "Balance Sheet",
                      "Calendar",
                      "Cash Flows",
                      "Class Model",
                      "Document",
                      "Income Statement",
                      "HTML Page",
                      "Materialized View",
                      "Class Schema Form",
                      "Navigation Menu",
                      "Page Editor",
                      "Process Model",
                      "Raw",
                      "Schema Form",
                      "Schema Table",
                      "Tree",
                      "Validate"
                    ],
                    "title": "Display Type",
                    "type": "string"
                  },
                  "pageId": {
                    "pattern": "[a-z][a-z0-9-]{0,17}",
                    "argoQuery": {
                      "selector": "Insatnces Of",
                      "where": {
                        "classId": "pages"
                      },
                      "idsArrayPath": {
                        "path": "$[*].key",
                        "indexName": "classId"
                      },
                      "sortBy": "name"
                    },
                    "title": "Page",
                    "type": "string"
                  },
                  "viewId": {
                    "pattern": "[a-z][a-z0-9-]{0,17}",
                    "argoQuery": {
                      "selector": "Insatnces Of",
                      "where": {
                        "classId": "views"
                      },
                      "idsArrayPath": {
                        "path": "$[*].key",
                        "indexName": "classId"
                      },
                      "sortBy": "name"
                    },
                    "title": "View",
                    "type": "string"
                  },
                  "menuId": {
                    "pattern": "[a-z][a-z0-9-]{0,17}",
                    "argoQuery": {
                      "selector": "Insatnces Of",
                      "where": {
                        "classId": "menus"
                      },
                      "idsArrayPath": {
                        "path": "$[*].key",
                        "indexName": "classId"
                      },
                      "sortBy": "name"
                    },
                    "title": "Menu",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "title": "Widgets",
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "title": "Tabs",
        "type": "array"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "views",
    "title": "Views",
    "description": "Views are important. They determine who gets to see/update what.These are some of the things we do with queriesRetrieve a set of childrenProvide an icon for the tree node based on queryNameDetermine popup menu/toolbar/buttons options: add/delete/associate/disassociate/copy/deepcopy for the tree node/table row based on queryNameDetermine when buttons are hidden/disabled based on authorization, selected subDoc, mutually exclusive propertiesProvide filtering for tables/treesDetermine drop allowed for DnD, which associations/disassociationFind tree path based on given node for tree expand: reverse navigation&nbsp;",
    "classIcon": "Views.svg",
    "superClassId": "off-sheet",
    "properties": {
      "queryId": {
        "title": "Initial Query",
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "argoQuery": {
          "selector": "Insatnces Of",
          "where": {
            "classId": "queries"
          },
          "idsArrayPath": {
            "path": "$[*].key",
            "indexName": "classId"
          },
          "sortBy": "name"
        },
        "type": "string"
      },
      "baseClassId": {
        "title": "Base Class",
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "argoQuery": {
          "selector": "Subclasses",
          "where": {
            "classId": "universe"
          },
          "sortBy": "title"
        },
        "type": "string"
      },
      "required": {
        "items": {
          "type": "string"
        },
        "title": "Required",
        "type": "array"
      },
      "properties": {
        "properties": {},
        "title": "Properties",
        "type": "object"
      },
      "nodesPageId": {
        "description": "FIX what should the argoQuery be?",
        "type": "string"
      },
      "type": {
        "description": "FIX what do we need this for?",
        "type": "string"
      },
      "query": {
        "description": "FIX what do we need this for?",
        "type": "string"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "queries",
    "title": "Queries",
    "description": "Queries used by views",
    "classIcon": "Queries.svg",
    "superClassId": "off-sheet",
    "properties": {
      "selector": {
        "enum": [
          "Where Clause",
          "Context Object",
          "Subclasses",
          "Insatnces Of"
        ],
        "title": "Selector",
        "type": "string"
      },
      "where": {
        "title": "Where Index Equals",
        "type": "object"
      },
      "idsArrayPath": {
        "title": "Ids Array Path",
        "properties": {
          "path": {
            "title": "Path",
            "type": "string",
            "attrs": {
              "type": "textarea",
              "autosize": true
            }
          },
          "indexName": {
            "title": "Index Name",
            "type": "string"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "filter": {
        "title": "Filter",
        "properties": {
          "path": {
            "title": "Path",
            "type": "string",
            "attrs": {
              "type": "textarea",
              "autosize": true
            }
          },
          "equals": {
            "title": "Equals",
            "type": "string"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "sortBy": {
        "title": "Sort By",
        "type": "string"
      },
      "subQueryIds": {
        "items": {
          "pattern": "[a-z][a-z0-9-]{0,17}",
          "argoQuery": {
            "selector": "Insatnces Of",
            "where": {
              "classId": "queries"
            },
            "idsArrayPath": {
              "path": "$[*].key",
              "indexName": "classId"
            },
            "sortBy": "name"
          },
          "type": "string"
        },
        "title": "Sub-Queries",
        "type": "array"
      },
      "pageId": {
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "argoQuery": {
          "selector": "Insatnces Of",
          "where": {
            "classId": "pages"
          },
          "idsArrayPath": {
            "path": "$[*].key",
            "indexName": "classId"
          },
          "sortBy": "name"
        },
        "title": "Nodes Page",
        "type": "string"
      },
      "nodesIcon": {
        "maxLength": 2000,
        "contentEncoding": "utf8",
        "contentMediaType": "image/svg+xml",
        "minLength": 0,
        "title": "Nodes Icon",
        "type": "string"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "paragraphs",
    "title": "Paragraphs",
    "description": "Ordinary HTML pages",
    "classIcon": "Paragraphs.svg",
    "superClassId": "off-sheet",
    "properties": {
      "subParagraphIds": {
        "items": {
          "argoQuery": {
            "selector": "Insatnces Of",
            "where": {
              "classId": "paragraphs"
            },
            "idsArrayPath": {
              "path": "$[*].key",
              "indexName": "classId"
            }
          },
          "title": "Sub Ducument",
          "type": "string"
        },
        "title": "Sub Paragraphs",
        "type": "array"
      }
    },
    "pageId": "mm4nurerors",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "menus",
    "title": "Menus",
    "description": "Custom Menus",
    "classIcon": "Menus.svg",
    "superClassId": "off-sheet",
    "properties": {
      "menuArr": {
        "items": {
          "properties": {
            "name": {
              "placeholder": "Provide a name",
              "maxLength": 1000,
              "title": "Name",
              "type": "string"
            },
            "pageId": {
              "pattern": "[a-z][a-z0-9-]{0,17}",
              "argoQuery": {
                "selector": "Insatnces Of",
                "where": {
                  "classId": "pages"
                },
                "idsArrayPath": {
                  "path": "$[*].key",
                  "indexName": "classId"
                },
                "sortBy": "name"
              },
              "title": "Page",
              "type": "string"
            },
            "nextLevelSelectedObjId": {
              "pattern": "[a-z][a-z0-9-]{0,17}",
              "argoQuery": {
                "selector": "Insatnces Of",
                "where": {
                  "classId": "accounts"
                },
                "idsArrayPath": {
                  "path": "$[*].key",
                  "indexName": "classId"
                },
                "sortBy": "name"
              },
              "title": "Next Level Selected ObjectId",
              "type": "string"
            },
            "icon": {
              "maxLength": 2000,
              "contentEncoding": "utf8",
              "contentMediaType": "image/svg+xml",
              "minLength": 0,
              "title": "Icon",
              "type": "string"
            },
            "menuArr": {
              "items": {
                "properties": {
                  "name": {
                    "placeholder": "Provide a name",
                    "maxLength": 1000,
                    "title": "Name",
                    "type": "string"
                  },
                  "pageId": {
                    "pattern": "[a-z][a-z0-9-]{0,17}",
                    "argoQuery": {
                      "selector": "Insatnces Of",
                      "where": {
                        "classId": "pages"
                      },
                      "idsArrayPath": {
                        "path": "$[*].key",
                        "indexName": "classId"
                      },
                      "sortBy": "name"
                    },
                    "title": "Page",
                    "type": "string"
                  },
                  "nextLevelSelectedObjId": {
                    "pattern": "[a-z][a-z0-9-]{0,17}",
                    "argoQuery": {
                      "selector": "Insatnces Of",
                      "where": {
                        "classId": "accounts"
                      },
                      "idsArrayPath": {
                        "path": "$[*].key",
                        "indexName": "classId"
                      },
                      "sortBy": "name"
                    },
                    "title": "Next Level Selected ObjectId",
                    "type": "string"
                  },
                  "icon": {
                    "maxLength": 2000,
                    "contentEncoding": "utf8",
                    "contentMediaType": "image/svg+xml",
                    "minLength": 0,
                    "title": "Icon",
                    "type": "string"
                  },
                  "menuArr": {
                    "items": {
                      "properties": {
                        "name": {
                          "placeholder": "Provide a name",
                          "maxLength": 1000,
                          "title": "Name",
                          "type": "string"
                        },
                        "pageId": {
                          "pattern": "[a-z][a-z0-9-]{0,17}",
                          "argoQuery": {
                            "selector": "Insatnces Of",
                            "where": {
                              "classId": "pages"
                            },
                            "idsArrayPath": {
                              "path": "$[*].key",
                              "indexName": "classId"
                            },
                            "sortBy": "name"
                          },
                          "title": "Page",
                          "type": "string"
                        },
                        "nextLevelSelectedObjId": {
                          "pattern": "[a-z][a-z0-9-]{0,17}",
                          "argoQuery": {
                            "selector": "Insatnces Of",
                            "where": {
                              "classId": "accounts"
                            },
                            "idsArrayPath": {
                              "path": "$[*].key",
                              "indexName": "classId"
                            },
                            "sortBy": "name"
                          },
                          "title": "Next Level Selected ObjectId",
                          "type": "string"
                        },
                        "icon": {
                          "maxLength": 2000,
                          "contentEncoding": "utf8",
                          "contentMediaType": "image/svg+xml",
                          "minLength": 0,
                          "title": "Icon",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "title": "Menu Items",
                    "additionalItems": true,
                    "type": "array"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "title": "Menu Items",
              "additionalItems": true,
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "title": "Menu Items",
        "additionalItems": true,
        "type": "array"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "intang-assets",
    "title": "Intangible Assets",
    "description": "Intangible Assets owned by users/organizations",
    "superClassId": "assets",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "investments",
    "title": "Investments",
    "description": "Investments owned by users/organizations",
    "superClassId": "assets",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "property",
    "title": "Property, Plant and Equipment",
    "description": "Property, Plant and Equipment owned by users/organizations",
    "superClassId": "assets",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "current-assets",
    "title": "Current Assets",
    "description": "Current Assets owned by users/organizations",
    "superClassId": "assets",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "stock-equity",
    "title": "Stockholder's Equity",
    "description": "Stockholder's Equity owned by users/organizations",
    "superClassId": "liabil-equity",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "liabilities",
    "title": "Liabilities",
    "description": "Liabilities owned by users/organizations",
    "superClassId": "liabil-equity",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "open",
    "title": "Open",
    "description": "Open",
    "classIcon": "Open.svg",
    "superClassId": "steps",
    "properties": {
      "nextStepIds": {
        "items": {
          "properties": {
            "action": {
              "maxLength": 100,
              "title": "Action",
              "type": "string"
            },
            "stepId": {
              "pattern": "[a-z][a-z0-9-]{0,17}",
              "argoQuery": {
                "selector": "Insatnces Of",
                "where": {
                  "classId": "steps"
                },
                "idsArrayPath": {
                  "path": "$[*].key",
                  "indexName": "classId"
                },
                "sortBy": "name"
              },
              "title": "Step",
              "type": "string"
            }
          },
          "required": [
            "action"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "title": "Next Steps",
        "type": "array"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "closed",
    "title": "Closed",
    "description": "Closed",
    "classIcon": "Closed.svg",
    "superClassId": "steps",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "goodwill",
    "title": "Goodwill",
    "description": "Goodwill owned by users/organizations",
    "superClassId": "intang-assets",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "trade-names",
    "title": "Trade Names",
    "description": "Trade Names owned by users/organizations",
    "superClassId": "intang-assets",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "equipment",
    "title": "Equipment",
    "description": "Equipment owned by users/organizations",
    "superClassId": "property",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "land",
    "title": "Land",
    "description": "Land owned by users/organizations",
    "superClassId": "property",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "accum-depreca",
    "title": "Less: Accum Deprecation",
    "description": "Less: Accum Deprecation owned by users/organizations",
    "superClassId": "property",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "land-improve",
    "title": "Land Improvements",
    "description": "Land Improvements owned by users/organizations",
    "superClassId": "property",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "buildings",
    "title": "Buildings",
    "description": "Buildings owned by users/organizations",
    "superClassId": "property",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "petty-cash",
    "title": "Petty Cash",
    "description": "Petty Cash owned by users/organizations",
    "superClassId": "current-assets",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "temp-invest",
    "title": "Temporary Investments",
    "description": "Temporary Investments owned by users/organizations",
    "superClassId": "current-assets",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "prepaid-insure",
    "title": "Prepaid Insurance",
    "description": "Prepaid Insurance owned by users/organizations",
    "superClassId": "current-assets",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "inventory",
    "title": "Inventory",
    "description": "Inventory owned by users/organizations",
    "superClassId": "current-assets",
    "properties": {},
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "for-sale",
    "title": "For Sale",
    "superClassId": "inventory",
    "properties": {},
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "for-rent",
    "title": "For Rent",
    "superClassId": "inventory",
    "properties": {},
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "accounts-rec",
    "title": "Accounts Receivible -net",
    "description": "Accounts Receivible -net owned by users/organizations",
    "superClassId": "current-assets",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "supplies",
    "title": "Supplies",
    "description": "Supplies owned by users/organizations",
    "superClassId": "current-assets",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "ret-earnings",
    "title": "Retained Earnings",
    "description": "Retained Earnings owned by users/organizations",
    "superClassId": "stock-equity",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "other-income",
    "title": "Accum Other Comprehensive Income",
    "description": "Accum Other Comprehensive Income owned by users/organizations",
    "superClassId": "stock-equity",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "treasury-stock",
    "title": "Less: Treasury Stock",
    "description": "Less: Treasury Stock owned by users/organizations",
    "superClassId": "stock-equity",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "common-stock",
    "title": "Common Stock",
    "description": "Common Stock owned by users/organizations",
    "superClassId": "stock-equity",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "long-libilities",
    "title": "Long-Term Libilities",
    "description": "Long-Term Libilities owned by users/organizations",
    "superClassId": "liabilities",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "current-liabil",
    "title": "Current Libilities",
    "description": "Current Libilities owned by users/organizations",
    "superClassId": "liabilities",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "user-input",
    "title": "User Input",
    "description": "User Input",
    "classIcon": "User Input.svg",
    "superClassId": "open",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "execute",
    "title": "Execute",
    "description": "Execute",
    "classIcon": "Execute.svg",
    "superClassId": "open",
    "properties": {
      "execute": {
        "items": {
          "type": "string"
        },
        "title": "Execute",
        "type": "array"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "delegate",
    "title": "Delegate",
    "description": "Delegate",
    "classIcon": "Delegate.svg",
    "superClassId": "open",
    "properties": {
      "deligateProcessId": {
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "argoQuery": {
          "selector": "Insatnces Of",
          "where": {
            "classId": "processes"
          },
          "idsArrayPath": {
            "path": "$[*].key",
            "indexName": "classId"
          },
          "sortBy": "name"
        },
        "title": "Deligate to Process",
        "type": "string"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "taxes-payable",
    "title": "Taxes Payable",
    "description": "Taxes Payable owned by users/organizations",
    "superClassId": "current-liabil",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "accounts-pay",
    "title": "Accounts Payable",
    "description": "Accounts Payable owned by users/organizations",
    "superClassId": "current-liabil",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "wages-payable",
    "title": "Wages Payable",
    "description": "Wages Payable owned by users/organizations",
    "superClassId": "current-liabil",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "waranty-liabil",
    "title": "Waranty Liability",
    "description": "Waranty Liability owned by users/organizations",
    "superClassId": "current-liabil",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "notes-payable",
    "title": "Notes Payable",
    "description": "Notes Payable owned by users/organizations",
    "superClassId": "current-liabil",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "intrest-payable",
    "title": "Intrest Payable",
    "description": "Intrest Payable owned by users/organizations",
    "superClassId": "current-liabil",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "unearned-rev",
    "title": "Unearned Revenues",
    "description": "Unearned Revenues owned by users/organizations",
    "superClassId": "current-liabil",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "bonds-payable",
    "title": "Bonds Payable",
    "description": "Bonds Payable owned by users/organizations",
    "superClassId": "long-libilities",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "notes-payable",
    "title": "Notes Payable",
    "description": "Notes Payable owned by users/organizations",
    "superClassId": "long-libilities",
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "provider",
    "title": "Provider",
    "description": "Provider",
    "classIcon": "Provider.svg",
    "superClassId": "user-input",
    "properties": {
      "authorizedOrgUnitId": {
        "pattern": "[a-z][a-z0-9-]{0,17}",
        "argoQuery": {
          "selector": "Insatnces Of",
          "where": {
            "classId": "org-units"
          },
          "idsArrayPath": {
            "path": "$[*].key",
            "indexName": "classId"
          },
          "sortBy": "name"
        },
        "title": "Authorized Organizational Unit",
        "type": "string"
      }
    },
    "type": "object",
    "additionalProperties": false
  },
  {
    "key": "consumer",
    "title": "Consumer",
    "description": "Consumer",
    "classIcon": "Consumer.svg",
    "superClassId": "user-input",
    "type": "object",
    "additionalProperties": false
  }
]