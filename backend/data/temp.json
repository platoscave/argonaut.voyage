{
    "classIcon": String("Menus.svg"),
    "description": String("<p>Custom Menus/p>"),
    "key": String("menus"),
    "properties": Object {
        "menuArr": Object {
            "additionalItems": Bool(true),
            "items": Object {
                "additionalProperties": Bool(false),
                "properties": Object {
                    "icon": Object {
                        "contentEncoding": String("utf8"),
                        "contentMediaType": String("image/svg+xml"),
                        "maxLength": Number(2000),
                        "minLength": Number(0),
                        "title": String("Icon"),
                        "type": String("string"),
                    },
                    "menuArr": Object {
                        "additionalItems": Bool(true),
                        "items": Object {
                            "additionalProperties": Bool(false),
                            "properties": Object {
                                "icon": Object {
                                    "contentEncoding": String("utf8"),
                                    "contentMediaType": String("image/svg+xml"),
                                    "maxLength": Number(2000),
                                    "minLength": Number(0),
                                    "title": String("Icon"),
                                    "type": String("string"),
                                },
                                "menuArr": Object {
                                    "additionalItems": Bool(true),
                                    "items": Object {
                                        "additionalProperties": Bool(false),
                                        "properties": Object {
                                            "icon": Object {
                                                "contentEncoding": String("utf8"),
                                                "contentMediaType": String("image/svg+xml"),
                                                "maxLength": Number(2000),
                                                "minLength": Number(0),
                                                "title": String("Icon"),
                                                "type": String("string"),
                                            },
                                            "name": Object {
                                                "maxLength": Number(1000),
                                                "placeholder": String("Provide a name"),
                                                "title": String("Name"),
                                                "type": String("string"),
                                            },
                                            "nextLevelSelectedObjId": Object {
                                                "argoQuery": Object {
                                                    "idsArrayPath": Object {
                                                        "indexName": String("classId"),
                                                        "path": String("$[*].key"),
                                                    },
                                                    "selector": String("Subclasses"),
                                                    "sortBy": String("name"),
                                                    "where": Object {
                                                        "classId": String("accounts"),
                                                    },
                                                },
                                                "pattern": String("[a-z][a-z0-9-]{0,17}"),
                                                "title": String("Next Level Selected ObjectId"),
                                                "type": String("string"),
                                            },
                                            "pageId": Object {
                                                "argoQuery": Object {
                                                    "idsArrayPath": Object {
                                                        "indexName": String("classId"),
                                                        "path": String("$[*].key"),
                                                    },
                                                    "selector": String("Subclasses"),
                                                    "sortBy": String("name"),
                                                    "where": Object {
                                                        "classId": String("pages"),
                                                    },
                                                },
                                                "pattern": String("[a-z][a-z0-9-]{0,17}"),
                                                "title": String("Page"),
                                                "type": String("string"),
                                            },
                                        },
                                        "type": String("object"),
                                    },
                                    "title": String("Menu Items"),
                                    "type": String("array"),
                                },
                                "name": Object {
                                    "maxLength": Number(1000),
                                    "placeholder": String("Provide a name"),
                                    "title": String("Name"),
                                    "type": String("string"),
                                },
                                "nextLevelSelectedObjId": Object {
                                    "argoQuery": Object {
                                        "idsArrayPath": Object {
                                            "indexName": String("classId"),
                                            "path": String("$[*].key"),
                                        },
                                        "selector": String("Subclasses"),
                                        "sortBy": String("name"),
                                        "where": Object {
                                            "classId": String("accounts"),
                                        },
                                    },
                                    "pattern": String("[a-z][a-z0-9-]{0,17}"),
                                    "title": String("Next Level Selected ObjectId"),
                                    "type": String("string"),
                                },
                                "pageId": Object {
                                    "argoQuery": Object {
                                        "idsArrayPath": Object {
                                            "indexName": String("classId"),
                                            "path": String("$[*].key"),
                                        },
                                        "selector": String("Subclasses"),
                                        "sortBy": String("name"),
                                        "where": Object {
                                            "classId": String("pages"),
                                        },
                                    },
                                    "pattern": String("[a-z][a-z0-9-]{0,17}"),
                                    "title": String("Page"),
                                    "type": String("string"),
                                },
                            },
                            "type": String("object"),
                        },
                        "title": String("Menu Items"),
                        "type": String("array"),
                    },
                    "name": Object {
                        "maxLength": Number(1000),
                        "placeholder": String("Provide a name"),
                        "title": String("Name"),
                        "type": String("string"),
                    },
                    "nextLevelSelectedObjId": Object {
                        "argoQuery": Object {
                            "idsArrayPath": Object {
                                "indexName": String("classId"),
                                "path": String("$[*].key"),
                            },
                            "selector": String("Subclasses"),
                            "sortBy": String("name"),
                            "where": Object {
                                "classId": String("accounts"),
                            },
                        },
                        "pattern": String("[a-z][a-z0-9-]{0,17}"),
                        "title": String("Next Level Selected ObjectId"),
                        "type": String("string"),
                    },
                    "pageId": Object {
                        "argoQuery": Object {
                            "idsArrayPath": Object {
                                "indexName": String("classId"),
                                "path": String("$[*].key"),
                            },
                            "selector": String("Subclasses"),
                            "sortBy": String("name"),
                            "where": Object {
                                "classId": String("pages"),
                            },
                        },
                        "pattern": String("[a-z][a-z0-9-]{0,17}"),
                        "title": String("Page"),
                        "type": String("string"),
                    },
                },
                "type": String("object"),
            },
            "title": String("Menu Items"),
            "type": String("array"),
        },
    },
    "superClassId": String("off-sheet"),
    "title": String("Menus"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Layouts.svg"),
    "description": String("<p>Describes the Tab-Widget-View Reference structure</p>"),
    "key": String("pages"),
    "properties": Object {
        "divider": Object {
            "enum": Array [
                String("Vertical"),
                String("Horizontal"),
            ],
            "title": String("Divider"),
            "type": String("string"),
        },
        "layout": Object {
            "enum": Array [
                String("Page"),
                String("Master Detail"),
                String("Studio"),
            ],
            "title": String("Layout"),
            "type": String("string"),
        },
        "model": Object {
            "enum": Array [
                String("Mind Palace "),
                String("Class Model"),
                String("Process Model"),
            ],
            "title": String("Model"),
            "type": String("string"),
        },
        "tabs": Object {
            "additionalItems": Bool(true),
            "description": String(""),
            "items": Object {
                "additionalProperties": Bool(false),
                "properties": Object {
                    "description": Object {
                        "contentMediaType": String("text/html"),
                        "maxLength": Number(10000),
                        "placholder": String("Add a description"),
                        "title": String("Description"),
                        "type": String("string"),
                    },
                    "name": Object {
                        "maxLength": Number(1000),
                        "placeholder": String("Provide a name"),
                        "title": String("Tab Name"),
                        "type": String("string"),
                    },
                    "pageId": Object {
                        "argoQuery": Object {
                            "idsArrayPath": Object {
                                "indexName": String("classId"),
                                "path": String("$[*].key"),
                            },
                            "selector": String("Subclasses"),
                            "sortBy": String("name"),
                            "where": Object {
                                "classId": String("pages"),
                            },
                        },
                        "pattern": String("[a-z][a-z0-9-]{0,17}"),
                        "title": String("Page"),
                        "type": String("string"),
                    },
                    "widgets": Object {
                        "additionalItems": Bool(true),
                        "items": Object {
                            "additionalProperties": Bool(false),
                            "properties": Object {
                                "description": Object {
                                    "contentMediaType": String("text/html"),
                                    "maxLength": Number(10000),
                                    "placholder": String("Add a description"),
                                    "title": String("Description"),
                                    "type": String("string"),
                                },
                                "menuId": Object {
                                    "argoQuery": Object {
                                        "idsArrayPath": Object {
                                            "indexName": String("classId"),
                                            "path": String("$[*].key"),
                                        },
                                        "selector": String("Subclasses"),
                                        "sortBy": String("name"),
                                        "where": Object {
                                            "classId": String("menus"),
                                        },
                                    },
                                    "pattern": String("[a-z][a-z0-9-]{0,17}"),
                                    "title": String("Menu"),
                                    "type": String("string"),
                                },
                                "name": Object {
                                    "maxLength": Number(1000),
                                    "placeholder": String("Provide a name"),
                                    "title": String("Name"),
                                    "type": String("string"),
                                },
                                "pageId": Object {
                                    "argoQuery": Object {
                                        "idsArrayPath": Object {
                                            "indexName": String("classId"),
                                            "path": String("$[*].key"),
                                        },
                                        "selector": String("Subclasses"),
                                        "sortBy": String("name"),
                                        "where": Object {
                                            "classId": String("pages"),
                                        },
                                    },
                                    "pattern": String("[a-z][a-z0-9-]{0,17}"),
                                    "title": String("Page"),
                                    "type": String("string"),
                                },
                                "viewId": Object {
                                    "argoQuery": Object {
                                        "idsArrayPath": Object {
                                            "indexName": String("classId"),
                                            "path": String("$[*].key"),
                                        },
                                        "selector": String("Subclasses"),
                                        "sortBy": String("name"),
                                        "where": Object {
                                            "classId": String("views"),
                                        },
                                    },
                                    "pattern": String("[a-z][a-z0-9-]{0,17}"),
                                    "title": String("View"),
                                    "type": String("string"),
                                },
                                "widgetType": Object {
                                    "default": String("Schema Form"),
                                    "enum": Array [
                                        String("Balance Sheet"),
                                        String("Calendar"),
                                        String("Cash Flows"),
                                        String("Class Model"),
                                        String("Document"),
                                        String("Income Statement"),
                                        String("HTML Page"),
                                        String("Materialized View"),
                                        String("Class Schema Form"),
                                        String("Navigation Menu"),
                                        String("Page Editor"),
                                        String("Process Model"),
                                        String("Raw"),
                                        String("Schema Form"),
                                        String("Schema Table"),
                                        String("Tree"),
                                        String("Validate"),
                                    ],
                                    "title": String("Display Type"),
                                    "type": String("string"),
                                },
                            },
                            "type": String("object"),
                        },
                        "title": String("Widgets"),
                        "type": String("array"),
                    },
                },
                "type": String("object"),
            },
            "title": String("Tabs"),
            "type": String("array"),
        },
    },
    "superClassId": String("off-sheet"),
    "title": String("Pages"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Open.svg"),
    "description": String("<p>Open</p>"),
    "key": String("open"),
    "properties": Object {
        "nextStepIds": Object {
            "items": Object {
                "properties": Object {
                    "action": Object {
                        "maxLength": Number(100),
                        "title": String("Action"),
                        "type": String("string"),
                    },
                    "stepId": Object {
                        "argoQuery": Object {
                            "idsArrayPath": Object {
                                "indexName": String("classId"),
                                "path": String("$[*].key"),
                            },
                            "selector": String("Subclasses"),
                            "sortBy": String("name"),
                            "where": Object {
                                "classId": String("steps"),
                            },
                        },
                        "pattern": String("[a-z][a-z0-9-]{0,17}"),
                        "title": String("Step"),
                        "type": String("string"),
                    },
                },
                "required": Array [
                    String("action"),
                ],
                "type": String("object"),
            },
            "title": String("Next Steps"),
            "type": String("array"),
        },
    },
    "superClassId": String("steps"),
    "title": String("Open"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "description": String("<p>Things owned by users/organizations</p>"),
    "key": String("resources"),
    "properties": Object {
        "ownerId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("accounts"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Owner"),
            "type": String("string"),
        },
    },
    "required": Array [
        String("ownerId"),
    ],
    "superClassId": String("universe"),
    "title": String("Resources"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Open.svg"),
    "description": String("<p>Open</p>"),
    "key": String("open"),
    "properties": Object {
        "nextStepIds": Object {
            "items": Object {
                "properties": Object {
                    "action": Object {
                        "maxLength": Number(100),
                        "title": String("Action"),
                        "type": String("string"),
                    },
                    "stepId": Object {
                        "argoQuery": Object {
                            "idsArrayPath": Object {
                                "indexName": String("classId"),
                                "path": String("$[*].key"),
                            },
                            "selector": String("Subclasses"),
                            "sortBy": String("name"),
                            "where": Object {
                                "classId": String("steps"),
                            },
                        },
                        "pattern": String("[a-z][a-z0-9-]{0,17}"),
                        "title": String("Step"),
                        "type": String("string"),
                    },
                },
                "required": Array [
                    String("action"),
                ],
                "type": String("object"),
            },
            "title": String("Next Steps"),
            "type": String("array"),
        },
    },
    "superClassId": String("steps"),
    "title": String("Open"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Views.svg"),
    "description": String("<p>Views are important. They determine who gets to see/update what.</p><p>These are some of the things we do with queries</p><ul><li>Retrieve a set of children</li><li>Provide an icon for the tree node based on queryName</li><li>Determine popup menu/toolbar/buttons options: add/delete/associate/disassociate/copy/deepcopy for the tree node/table row based on queryName</li><li>Determine when buttons are hidden/disabled based on authorization, selected subDoc, mutually exclusive properties</li><li>Provide filtering for tables/trees</li><li>Determine drop allowed for DnD, which associations/disassociation</li><li>Find tree path based on given node for tree expand: reverse navigation</li></ul><p>&nbsp;</p>"),
    "key": String("views"),
    "properties": Object {
        "baseClassId": Object {
            "argoQuery": Object {
                "selector": String("Subclasses"),
                "sortBy": String("title"),
                "where": Object {
                    "classId": String("universe"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Base Class"),
            "type": String("string"),
        },
        "properties": Object {
            "title": String("Properties"),
            "type": String("object"),
        },
        "queryId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("queries"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Initial Query"),
            "type": String("string"),
        },
        "required": Object {
            "items": Object {
                "type": String("string"),
            },
            "title": String("Required"),
            "type": String("array"),
        },
    },
    "superClassId": String("off-sheet"),
    "title": String("Views"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Queries.svg"),
    "description": String("<p>Queries used by views</p>"),
    "key": String("queries"),
    "properties": Object {
        "filter": Object {
            "properties": Object {
                "equals": Object {
                    "title": String("Equals"),
                    "type": String("string"),
                },
                "path": Object {
                    "attrs": Object {
                        "autosize": Bool(true),
                        "type": String("textarea"),
                    },
                    "title": String("Path"),
                    "type": String("string"),
                },
            },
            "title": String("Filter"),
            "type": String("object"),
        },
        "idsArrayPath": Object {
            "properties": Object {
                "indexName": Object {
                    "title": String("Index Name"),
                    "type": String("string"),
                },
                "path": Object {
                    "attrs": Object {
                        "autosize": Bool(true),
                        "type": String("textarea"),
                    },
                    "title": String("Path"),
                    "type": String("string"),
                },
            },
            "title": String("Ids Array Path"),
            "type": String("object"),
        },
        "nodesIcon": Object {
            "contentEncoding": String("utf8"),
            "contentMediaType": String("image/svg+xml"),
            "maxLength": Number(2000),
            "minLength": Number(0),
            "title": String("Nodes Icon"),
            "type": String("string"),
        },
        "pageId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("pages"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Nodes Page"),
            "type": String("string"),
        },
        "selector": Object {
            "enum": Array [
                String("Where Clause"),
                String("Context Object"),
                String("Subclasses"),
                String("Owned Accounts"),
            ],
            "title": String("Selector"),
            "type": String("string"),
        },
        "sortBy": Object {
            "title": String("Sort By"),
            "type": String("string"),
        },
        "subQueryIds": Object {
            "items": Object {
                "argoQuery": Object {
                    "idsArrayPath": Object {
                        "indexName": String("classId"),
                        "path": String("$[*].key"),
                    },
                    "selector": String("Subclasses"),
                    "sortBy": String("name"),
                    "where": Object {
                        "classId": String("queries"),
                    },
                },
                "pattern": String("[a-z][a-z0-9-]{0,17}"),
                "type": String("string"),
            },
            "title": String("Sub-Queries"),
            "type": String("array"),
        },
        "where": Object {
            "title": String("Where Index Equals"),
            "type": String("object"),
        },
    },
    "superClassId": String("off-sheet"),
    "title": String("Queries"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Accounts.svg"),
    "key": String("accounts"),
    "ownerId": String("argonaut"),
    "properties": Object {
        "account_name": Object {
            "maxLength": Number(12),
            "minLength": Number(12),
            "title": String("Account Name"),
            "type": String("string"),
        },
        "cpu_limit": Object {
            "properties": Object {
                "available": Object {
                    "title": String("Available"),
                    "type": String("number"),
                },
                "max": Object {
                    "title": String("Maximum"),
                    "type": String("number"),
                },
                "used": Object {
                    "title": String("Used"),
                    "type": String("number"),
                },
            },
            "type": String("object"),
        },
        "cpu_weight": Object {
            "title": String("Cpu Weight"),
            "type": String("number"),
        },
        "created": Object {
            "format": String("date-time"),
            "title": String("Created"),
            "type": String("string"),
        },
        "head_block_num": Object {
            "title": String("Head Block Number"),
            "type": String("number"),
        },
        "head_block_time": Object {
            "format": String("date-time"),
            "title": String("Head Block Time"),
            "type": String("string"),
        },
        "last_code_update": Object {
            "format": String("date-time"),
            "title": String("Last Code Update"),
            "type": String("string"),
        },
        "net_limit": Object {
            "properties": Object {
                "available": Object {
                    "title": String("Available"),
                    "type": String("number"),
                },
                "max": Object {
                    "title": String("Maximum"),
                    "type": String("number"),
                },
                "used": Object {
                    "title": String("Used"),
                    "type": String("number"),
                },
            },
            "type": String("object"),
        },
        "net_weight": Object {
            "title": String("Net Weight"),
            "type": String("number"),
        },
        "pageId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("pages"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Page"),
            "type": String("string"),
        },
        "permissions": Object {
            "items": Object {
                "properties": Object {
                    "parent": Object {
                        "maxLength": Number(12),
                        "minLength": Number(1),
                        "title": String("Parent Permission"),
                        "type": String("string"),
                    },
                    "perm_name": Object {
                        "maxLength": Number(12),
                        "minLength": Number(1),
                        "title": String("Permission Name"),
                        "type": String("string"),
                    },
                    "required_auth": Object {
                        "additionalProperties": Bool(false),
                        "properties": Object {
                            "accounts": Object {
                                "items": Object {
                                    "properties": Object {
                                        "permission": Object {
                                            "properties": Object {
                                                "actor": Object {
                                                    "maxLength": Number(12),
                                                    "minLength": Number(0),
                                                    "title": String("Actor"),
                                                    "type": String("string"),
                                                },
                                                "permission": Object {
                                                    "maxLength": Number(12),
                                                    "minLength": Number(0),
                                                    "title": String("Permission"),
                                                    "type": String("string"),
                                                },
                                            },
                                            "title": String("Permission"),
                                            "type": String("object"),
                                        },
                                        "weight": Object {
                                            "title": String("Weight"),
                                            "type": String("number"),
                                        },
                                    },
                                    "type": String("object"),
                                },
                                "title": String("Accounts"),
                                "type": String("array"),
                            },
                            "keys": Object {
                                "items": Object {
                                    "properties": Object {
                                        "key": Object {
                                            "maxLength": Number(44),
                                            "minLength": Number(0),
                                            "title": String("Key"),
                                            "type": String("string"),
                                        },
                                        "weight": Object {
                                            "title": String("Weight"),
                                            "type": String("number"),
                                        },
                                    },
                                    "type": String("object"),
                                },
                                "title": String("Keys"),
                                "type": String("array"),
                            },
                            "threshold": Object {
                                "title": String("Threshold"),
                                "type": String("number"),
                            },
                            "waits": Object {
                                "items": Object {
                                    "properties": Object {
                                        "wait_sec": Object {
                                            "title": String("Wait Seconds"),
                                            "type": String("string"),
                                        },
                                        "weight": Object {
                                            "title": String("Weight"),
                                            "type": String("number"),
                                        },
                                    },
                                    "type": String("object"),
                                },
                                "title": String("Waits"),
                                "type": String("array"),
                            },
                        },
                        "title": String("Required Authorization"),
                        "type": String("object"),
                    },
                },
                "type": String("object"),
            },
            "title": String("Permissions"),
            "type": String("array"),
        },
        "privileged": Object {
            "title": String("Privileged"),
            "type": String("boolean"),
        },
        "ram_quota": Object {
            "title": String("Ram Quota"),
            "type": String("number"),
        },
        "ram_usage": Object {
            "title": String("Ram Usage"),
            "type": String("number"),
        },
        "refund_request": Object {
            "title": String("Refund Request"),
            "type": String("string"),
        },
        "self_delegated_bandwidth": Object {
            "properties": Object {
                "cpu_weigh": Object {
                    "title": String("CPU Weight"),
                    "type": String("string"),
                },
                "cpu_weight": Object {
                    "title": String("CPU Weight"),
                    "type": String("string"),
                },
                "from": Object {
                    "title": String("From"),
                    "type": String("string"),
                },
                "to": Object {
                    "title": String("To"),
                    "type": String("string"),
                },
            },
            "title": String("Self Delegated Bandwidth"),
            "type": String("object"),
        },
        "subParagraphIds": Object {
            "items": Object {
                "argoQuery": Object {
                    "idsArrayPath": Object {
                        "indexName": String("classId"),
                        "path": String("$[*].key"),
                    },
                    "selector": String("Subclasses"),
                    "where": Object {
                        "classId": String("paragraphs"),
                    },
                },
                "title": String("Sub Ducument"),
                "type": String("string"),
            },
            "title": String("First Paragraphs"),
            "type": String("array"),
        },
        "total_resources": Object {
            "properties": Object {
                "cpu_weight": Object {
                    "title": String("CPU Weight"),
                    "type": String("string"),
                },
                "net_weigh": Object {
                    "title": String("Net Weight"),
                    "type": String("string"),
                },
                "owner": Object {
                    "title": String("Owner"),
                    "type": String("string"),
                },
                "ram_bytes": Object {
                    "title": String("Ram Bytes"),
                    "type": String("number"),
                },
            },
            "title": String("Total Resources"),
            "type": String("object"),
        },
        "voter_info": Object {
            "properties": Object {
                "flags1": Object {
                    "title": String("Flags 1"),
                    "type": String("number"),
                },
                "is_proxy": Object {
                    "title": String("Is Proxy"),
                    "type": String("number"),
                },
                "last_vote_weight": Object {
                    "title": String("Last Vote Weight"),
                    "type": String("string"),
                },
                "owner": Object {
                    "title": String("Owner"),
                    "type": String("string"),
                },
                "producer": Object {
                    "title": String("Producer"),
                    "type": String("array"),
                },
                "proxied_vote_weight": Object {
                    "title": String("Proxied Vote Weight"),
                    "type": String("string"),
                },
                "proxy": Object {
                    "title": String("Proxy"),
                    "type": String("string"),
                },
                "reserved2": Object {
                    "title": String("Reserved 2"),
                    "type": String("number"),
                },
                "reserved3": Object {
                    "title": String("Reserved 3"),
                    "type": String("string"),
                },
                "staked": Object {
                    "title": String("Staked"),
                    "type": String("number"),
                },
            },
            "title": String("Voter Info"),
            "type": String("object"),
        },
    },
    "query": String("get_account_info"),
    "superClassId": String("universe"),
    "title": String("Accounts"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "description": String("<p>Things owned by users/organizations</p>"),
    "key": String("resources"),
    "properties": Object {
        "ownerId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("accounts"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Owner"),
            "type": String("string"),
        },
    },
    "required": Array [
        String("ownerId"),
    ],
    "superClassId": String("universe"),
    "title": String("Resources"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "description": String("<p>Inventory owned by users/organizations</p>"),
    "key": String("inventory"),
    "properties": Object {},
    "superClassId": String("current-assets"),
    "title": String("Inventory"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Execute.svg"),
    "description": String("<p>Execute</p>"),
    "key": String("execute"),
    "properties": Object {
        "execute": Object {
            "items": Object {
                "type": String("string"),
            },
            "title": String("Execute"),
            "type": String("array"),
        },
    },
    "superClassId": String("open"),
    "title": String("Execute"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Processes.svg"),
    "description": String("<p>Processes</p>"),
    "key": String("processes"),
    "properties": Object {
        "firstStepId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("open"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("First Step"),
            "type": String("string"),
        },
        "returnActions": Object {
            "items": Object {
                "type": String("string"),
            },
            "title": String("Return Actions"),
            "type": String("array"),
        },
    },
    "superClassId": String("off-sheet"),
    "title": String("Processes"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Delegate.svg"),
    "description": String("<p>Delegate</p>"),
    "key": String("delegate"),
    "properties": Object {
        "deligateProcessId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("processes"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Deligate to Process"),
            "type": String("string"),
        },
    },
    "superClassId": String("open"),
    "title": String("Delegate"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("ProcessUniverse.svg"),
    "description": String("<p>The root of all classes and objects</p>"),
    "key": String("universe"),
    "properties": Object {
        "classId": Object {
            "argoQuery": Object {
                "selector": String("Subclasses"),
                "sortBy": String("title"),
                "where": Object {
                    "classId": String("universe"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Class"),
            "type": String("string"),
        },
        "description": Object {
            "contentMediaType": String("text/html"),
            "maxLength": Number(10000),
            "minLength": Number(0),
            "placholder": String("Add a description"),
            "title": String("Description"),
            "type": String("string"),
        },
        "icon": Object {
            "contentMediaType": String("image/svg+xml"),
            "maxLength": Number(2000),
            "minLength": Number(0),
            "title": String("Icon"),
            "type": String("string"),
        },
        "key": Object {
            "description": String("<p>Base32 identifier.</p>"),
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("key"),
            "type": String("string"),
        },
        "name": Object {
            "maxLength": Number(1000),
            "minLength": Number(0),
            "placeholder": String("Provide a name"),
            "title": String("Name"),
            "type": String("string"),
        },
    },
    "required": Array [
        String("key"),
        String("classId"),
    ],
    "title": String("Process Universe"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "description": String("<p>Things owned by users/organizations</p>"),
    "key": String("resources"),
    "properties": Object {
        "ownerId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("accounts"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Owner"),
            "type": String("string"),
        },
    },
    "required": Array [
        String("ownerId"),
    ],
    "superClassId": String("universe"),
    "title": String("Resources"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "key": String("for-rent"),
    "properties": Object {},
    "superClassId": String("inventory"),
    "title": String("For Rent"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Accounts.svg"),
    "key": String("accounts"),
    "ownerId": String("argonaut"),
    "properties": Object {
        "account_name": Object {
            "maxLength": Number(12),
            "minLength": Number(12),
            "title": String("Account Name"),
            "type": String("string"),
        },
        "cpu_limit": Object {
            "properties": Object {
                "available": Object {
                    "title": String("Available"),
                    "type": String("number"),
                },
                "max": Object {
                    "title": String("Maximum"),
                    "type": String("number"),
                },
                "used": Object {
                    "title": String("Used"),
                    "type": String("number"),
                },
            },
            "type": String("object"),
        },
        "cpu_weight": Object {
            "title": String("Cpu Weight"),
            "type": String("number"),
        },
        "created": Object {
            "format": String("date-time"),
            "title": String("Created"),
            "type": String("string"),
        },
        "head_block_num": Object {
            "title": String("Head Block Number"),
            "type": String("number"),
        },
        "head_block_time": Object {
            "format": String("date-time"),
            "title": String("Head Block Time"),
            "type": String("string"),
        },
        "last_code_update": Object {
            "format": String("date-time"),
            "title": String("Last Code Update"),
            "type": String("string"),
        },
        "net_limit": Object {
            "properties": Object {
                "available": Object {
                    "title": String("Available"),
                    "type": String("number"),
                },
                "max": Object {
                    "title": String("Maximum"),
                    "type": String("number"),
                },
                "used": Object {
                    "title": String("Used"),
                    "type": String("number"),
                },
            },
            "type": String("object"),
        },
        "net_weight": Object {
            "title": String("Net Weight"),
            "type": String("number"),
        },
        "pageId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("pages"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Page"),
            "type": String("string"),
        },
        "permissions": Object {
            "items": Object {
                "properties": Object {
                    "parent": Object {
                        "maxLength": Number(12),
                        "minLength": Number(1),
                        "title": String("Parent Permission"),
                        "type": String("string"),
                    },
                    "perm_name": Object {
                        "maxLength": Number(12),
                        "minLength": Number(1),
                        "title": String("Permission Name"),
                        "type": String("string"),
                    },
                    "required_auth": Object {
                        "additionalProperties": Bool(false),
                        "properties": Object {
                            "accounts": Object {
                                "items": Object {
                                    "properties": Object {
                                        "permission": Object {
                                            "properties": Object {
                                                "actor": Object {
                                                    "maxLength": Number(12),
                                                    "minLength": Number(0),
                                                    "title": String("Actor"),
                                                    "type": String("string"),
                                                },
                                                "permission": Object {
                                                    "maxLength": Number(12),
                                                    "minLength": Number(0),
                                                    "title": String("Permission"),
                                                    "type": String("string"),
                                                },
                                            },
                                            "title": String("Permission"),
                                            "type": String("object"),
                                        },
                                        "weight": Object {
                                            "title": String("Weight"),
                                            "type": String("number"),
                                        },
                                    },
                                    "type": String("object"),
                                },
                                "title": String("Accounts"),
                                "type": String("array"),
                            },
                            "keys": Object {
                                "items": Object {
                                    "properties": Object {
                                        "key": Object {
                                            "maxLength": Number(44),
                                            "minLength": Number(0),
                                            "title": String("Key"),
                                            "type": String("string"),
                                        },
                                        "weight": Object {
                                            "title": String("Weight"),
                                            "type": String("number"),
                                        },
                                    },
                                    "type": String("object"),
                                },
                                "title": String("Keys"),
                                "type": String("array"),
                            },
                            "threshold": Object {
                                "title": String("Threshold"),
                                "type": String("number"),
                            },
                            "waits": Object {
                                "items": Object {
                                    "properties": Object {
                                        "wait_sec": Object {
                                            "title": String("Wait Seconds"),
                                            "type": String("string"),
                                        },
                                        "weight": Object {
                                            "title": String("Weight"),
                                            "type": String("number"),
                                        },
                                    },
                                    "type": String("object"),
                                },
                                "title": String("Waits"),
                                "type": String("array"),
                            },
                        },
                        "title": String("Required Authorization"),
                        "type": String("object"),
                    },
                },
                "type": String("object"),
            },
            "title": String("Permissions"),
            "type": String("array"),
        },
        "privileged": Object {
            "title": String("Privileged"),
            "type": String("boolean"),
        },
        "ram_quota": Object {
            "title": String("Ram Quota"),
            "type": String("number"),
        },
        "ram_usage": Object {
            "title": String("Ram Usage"),
            "type": String("number"),
        },
        "refund_request": Object {
            "title": String("Refund Request"),
            "type": String("string"),
        },
        "self_delegated_bandwidth": Object {
            "properties": Object {
                "cpu_weigh": Object {
                    "title": String("CPU Weight"),
                    "type": String("string"),
                },
                "cpu_weight": Object {
                    "title": String("CPU Weight"),
                    "type": String("string"),
                },
                "from": Object {
                    "title": String("From"),
                    "type": String("string"),
                },
                "to": Object {
                    "title": String("To"),
                    "type": String("string"),
                },
            },
            "title": String("Self Delegated Bandwidth"),
            "type": String("object"),
        },
        "subParagraphIds": Object {
            "items": Object {
                "argoQuery": Object {
                    "idsArrayPath": Object {
                        "indexName": String("classId"),
                        "path": String("$[*].key"),
                    },
                    "selector": String("Subclasses"),
                    "where": Object {
                        "classId": String("paragraphs"),
                    },
                },
                "title": String("Sub Ducument"),
                "type": String("string"),
            },
            "title": String("First Paragraphs"),
            "type": String("array"),
        },
        "total_resources": Object {
            "properties": Object {
                "cpu_weight": Object {
                    "title": String("CPU Weight"),
                    "type": String("string"),
                },
                "net_weigh": Object {
                    "title": String("Net Weight"),
                    "type": String("string"),
                },
                "owner": Object {
                    "title": String("Owner"),
                    "type": String("string"),
                },
                "ram_bytes": Object {
                    "title": String("Ram Bytes"),
                    "type": String("number"),
                },
            },
            "title": String("Total Resources"),
            "type": String("object"),
        },
        "voter_info": Object {
            "properties": Object {
                "flags1": Object {
                    "title": String("Flags 1"),
                    "type": String("number"),
                },
                "is_proxy": Object {
                    "title": String("Is Proxy"),
                    "type": String("number"),
                },
                "last_vote_weight": Object {
                    "title": String("Last Vote Weight"),
                    "type": String("string"),
                },
                "owner": Object {
                    "title": String("Owner"),
                    "type": String("string"),
                },
                "producer": Object {
                    "title": String("Producer"),
                    "type": String("array"),
                },
                "proxied_vote_weight": Object {
                    "title": String("Proxied Vote Weight"),
                    "type": String("string"),
                },
                "proxy": Object {
                    "title": String("Proxy"),
                    "type": String("string"),
                },
                "reserved2": Object {
                    "title": String("Reserved 2"),
                    "type": String("number"),
                },
                "reserved3": Object {
                    "title": String("Reserved 3"),
                    "type": String("string"),
                },
                "staked": Object {
                    "title": String("Staked"),
                    "type": String("number"),
                },
            },
            "title": String("Voter Info"),
            "type": String("object"),
        },
    },
    "query": String("get_account_info"),
    "superClassId": String("universe"),
    "title": String("Accounts"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Features.svg"),
    "key": String("features"),
    "properties": Object {},
    "superClassId": String("off-sheet"),
    "title": String("Features"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Provider.svg"),
    "description": String("<p>Provider</p>"),
    "key": String("provider"),
    "properties": Object {
        "authorizedOrgUnitId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("org-units"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Authorized Organizational Unit"),
            "type": String("string"),
        },
    },
    "superClassId": String("user-input"),
    "title": String("Provider"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "description": String("<p>Organizations owned by users/organizations</p>"),
    "key": String("organizations"),
    "properties": Object {
        "description": Object {
            "placeholder": String("<p>[What do you do that is different?]</p>"),
            "title": String("What"),
        },
        "how": Object {
            "contentMediaType": String("text/html"),
            "maxLength": Number(10000),
            "minLength": Number(0),
            "placeholder": String("<p>[How do you achive your goal?]</p>"),
            "title": String("How"),
            "type": String("string"),
        },
        "why": Object {
            "contentMediaType": String("text/html"),
            "maxLength": Number(10000),
            "minLength": Number(0),
            "placeholder": String("<p>[Vision]</p>"),
            "title": String("Why"),
            "type": String("string"),
        },
    },
    "superClassId": String("accounts"),
    "title": String("Organizations"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "key": String("for-sale"),
    "properties": Object {},
    "superClassId": String("inventory"),
    "title": String("For Sale"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Open.svg"),
    "description": String("<p>Open</p>"),
    "key": String("open"),
    "properties": Object {
        "nextStepIds": Object {
            "items": Object {
                "properties": Object {
                    "action": Object {
                        "maxLength": Number(100),
                        "title": String("Action"),
                        "type": String("string"),
                    },
                    "stepId": Object {
                        "argoQuery": Object {
                            "idsArrayPath": Object {
                                "indexName": String("classId"),
                                "path": String("$[*].key"),
                            },
                            "selector": String("Subclasses"),
                            "sortBy": String("name"),
                            "where": Object {
                                "classId": String("steps"),
                            },
                        },
                        "pattern": String("[a-z][a-z0-9-]{0,17}"),
                        "title": String("Step"),
                        "type": String("string"),
                    },
                },
                "required": Array [
                    String("action"),
                ],
                "type": String("object"),
            },
            "title": String("Next Steps"),
            "type": String("array"),
        },
    },
    "superClassId": String("steps"),
    "title": String("Open"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "description": String("<p>Organizations owned by users/organizations</p>"),
    "key": String("organizations"),
    "properties": Object {
        "description": Object {
            "placeholder": String("<p>[What do you do that is different?]</p>"),
            "title": String("What"),
        },
        "how": Object {
            "contentMediaType": String("text/html"),
            "maxLength": Number(10000),
            "minLength": Number(0),
            "placeholder": String("<p>[How do you achive your goal?]</p>"),
            "title": String("How"),
            "type": String("string"),
        },
        "why": Object {
            "contentMediaType": String("text/html"),
            "maxLength": Number(10000),
            "minLength": Number(0),
            "placeholder": String("<p>[Vision]</p>"),
            "title": String("Why"),
            "type": String("string"),
        },
    },
    "superClassId": String("accounts"),
    "title": String("Organizations"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "description": String("<p>Things owned by users/organizations</p>"),
    "key": String("resources"),
    "properties": Object {
        "ownerId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("accounts"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Owner"),
            "type": String("string"),
        },
    },
    "required": Array [
        String("ownerId"),
    ],
    "superClassId": String("universe"),
    "title": String("Resources"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Propositions.svg"),
    "description": String("<p>Proposition</p>"),
    "key": String("propositions"),
    "properties": Object {
        "assetIds": Object {
            "items": Object {
                "argoQuery": Object {
                    "idsArrayPath": Object {
                        "indexName": String("classId"),
                        "path": String("$[*].key"),
                    },
                    "selector": String("Subclasses"),
                    "where": Object {
                        "classId": String("assets"),
                    },
                },
                "pattern": String("[a-z][a-z0-9-]{0,17}"),
                "title": String("Deligate to Process"),
                "type": String("string"),
            },
            "title": String("Assets"),
            "type": String("array"),
        },
        "endDate": Object {
            "format": String("date-time"),
            "title": String("End Date"),
            "type": String("string"),
        },
        "processId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("processes"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Process"),
            "type": String("string"),
        },
        "startDate": Object {
            "format": String("date-time"),
            "title": String("Start Date"),
            "type": String("string"),
        },
    },
    "superClassId": String("off-sheet"),
    "title": String("Propositions"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Agreements.svg"),
    "description": String("<p>Contracts between accounts about resources</p>"),
    "key": String("agreements"),
    "properties": Object {
        "amount": Object {
            "title": String("Amount"),
            "type": String("number"),
        },
        "assetId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("assets"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Asset"),
            "type": String("string"),
        },
        "consumerId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("accounts"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Consumer"),
            "type": String("string"),
        },
        "currency": Object {
            "title": String("Currency"),
            "type": String("string"),
        },
        "currentStepId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("steps"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Step"),
            "type": String("string"),
        },
        "expirationDate": Object {
            "title": String("Expiration Date"),
            "type": String("string"),
        },
        "propositionId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("processes"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Agreememt Process"),
            "type": String("string"),
        },
        "providerId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("accounts"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Provider"),
            "type": String("string"),
        },
        "startDate": Object {
            "title": String("Request Date"),
            "type": String("string"),
        },
    },
    "superClassId": String("universe"),
    "title": String("Agreements"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "description": String("<p>Organizations owned by users/organizations</p>"),
    "key": String("organizations"),
    "properties": Object {
        "description": Object {
            "placeholder": String("<p>[What do you do that is different?]</p>"),
            "title": String("What"),
        },
        "how": Object {
            "contentMediaType": String("text/html"),
            "maxLength": Number(10000),
            "minLength": Number(0),
            "placeholder": String("<p>[How do you achive your goal?]</p>"),
            "title": String("How"),
            "type": String("string"),
        },
        "why": Object {
            "contentMediaType": String("text/html"),
            "maxLength": Number(10000),
            "minLength": Number(0),
            "placeholder": String("<p>[Vision]</p>"),
            "title": String("Why"),
            "type": String("string"),
        },
    },
    "superClassId": String("accounts"),
    "title": String("Organizations"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Propositions.svg"),
    "description": String("<p>Proposition</p>"),
    "key": String("propositions"),
    "properties": Object {
        "assetIds": Object {
            "items": Object {
                "argoQuery": Object {
                    "idsArrayPath": Object {
                        "indexName": String("classId"),
                        "path": String("$[*].key"),
                    },
                    "selector": String("Subclasses"),
                    "where": Object {
                        "classId": String("assets"),
                    },
                },
                "pattern": String("[a-z][a-z0-9-]{0,17}"),
                "title": String("Deligate to Process"),
                "type": String("string"),
            },
            "title": String("Assets"),
            "type": String("array"),
        },
        "endDate": Object {
            "format": String("date-time"),
            "title": String("End Date"),
            "type": String("string"),
        },
        "processId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("processes"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Process"),
            "type": String("string"),
        },
        "startDate": Object {
            "format": String("date-time"),
            "title": String("Start Date"),
            "type": String("string"),
        },
    },
    "superClassId": String("off-sheet"),
    "title": String("Propositions"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Paragraphs.svg"),
    "description": String("<p>Ordinary HTML pages</p>"),
    "key": String("paragraphs"),
    "pageId": String("mm4nurerors"),
    "properties": Object {
        "subParagraphIds": Object {
            "items": Object {
                "argoQuery": Object {
                    "idsArrayPath": Object {
                        "indexName": String("classId"),
                        "path": String("$[*].key"),
                    },
                    "selector": String("Subclasses"),
                    "where": Object {
                        "classId": String("paragraphs"),
                    },
                },
                "title": String("Sub Ducument"),
                "type": String("string"),
            },
            "title": String("Sub Paragraphs"),
            "type": String("array"),
        },
    },
    "superClassId": String("off-sheet"),
    "title": String("Paragraphs"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Accounts.svg"),
    "key": String("accounts"),
    "ownerId": String("argonaut"),
    "properties": Object {
        "account_name": Object {
            "maxLength": Number(12),
            "minLength": Number(12),
            "title": String("Account Name"),
            "type": String("string"),
        },
        "cpu_limit": Object {
            "properties": Object {
                "available": Object {
                    "title": String("Available"),
                    "type": String("number"),
                },
                "max": Object {
                    "title": String("Maximum"),
                    "type": String("number"),
                },
                "used": Object {
                    "title": String("Used"),
                    "type": String("number"),
                },
            },
            "type": String("object"),
        },
        "cpu_weight": Object {
            "title": String("Cpu Weight"),
            "type": String("number"),
        },
        "created": Object {
            "format": String("date-time"),
            "title": String("Created"),
            "type": String("string"),
        },
        "head_block_num": Object {
            "title": String("Head Block Number"),
            "type": String("number"),
        },
        "head_block_time": Object {
            "format": String("date-time"),
            "title": String("Head Block Time"),
            "type": String("string"),
        },
        "last_code_update": Object {
            "format": String("date-time"),
            "title": String("Last Code Update"),
            "type": String("string"),
        },
        "net_limit": Object {
            "properties": Object {
                "available": Object {
                    "title": String("Available"),
                    "type": String("number"),
                },
                "max": Object {
                    "title": String("Maximum"),
                    "type": String("number"),
                },
                "used": Object {
                    "title": String("Used"),
                    "type": String("number"),
                },
            },
            "type": String("object"),
        },
        "net_weight": Object {
            "title": String("Net Weight"),
            "type": String("number"),
        },
        "pageId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("pages"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Page"),
            "type": String("string"),
        },
        "permissions": Object {
            "items": Object {
                "properties": Object {
                    "parent": Object {
                        "maxLength": Number(12),
                        "minLength": Number(1),
                        "title": String("Parent Permission"),
                        "type": String("string"),
                    },
                    "perm_name": Object {
                        "maxLength": Number(12),
                        "minLength": Number(1),
                        "title": String("Permission Name"),
                        "type": String("string"),
                    },
                    "required_auth": Object {
                        "additionalProperties": Bool(false),
                        "properties": Object {
                            "accounts": Object {
                                "items": Object {
                                    "properties": Object {
                                        "permission": Object {
                                            "properties": Object {
                                                "actor": Object {
                                                    "maxLength": Number(12),
                                                    "minLength": Number(0),
                                                    "title": String("Actor"),
                                                    "type": String("string"),
                                                },
                                                "permission": Object {
                                                    "maxLength": Number(12),
                                                    "minLength": Number(0),
                                                    "title": String("Permission"),
                                                    "type": String("string"),
                                                },
                                            },
                                            "title": String("Permission"),
                                            "type": String("object"),
                                        },
                                        "weight": Object {
                                            "title": String("Weight"),
                                            "type": String("number"),
                                        },
                                    },
                                    "type": String("object"),
                                },
                                "title": String("Accounts"),
                                "type": String("array"),
                            },
                            "keys": Object {
                                "items": Object {
                                    "properties": Object {
                                        "key": Object {
                                            "maxLength": Number(44),
                                            "minLength": Number(0),
                                            "title": String("Key"),
                                            "type": String("string"),
                                        },
                                        "weight": Object {
                                            "title": String("Weight"),
                                            "type": String("number"),
                                        },
                                    },
                                    "type": String("object"),
                                },
                                "title": String("Keys"),
                                "type": String("array"),
                            },
                            "threshold": Object {
                                "title": String("Threshold"),
                                "type": String("number"),
                            },
                            "waits": Object {
                                "items": Object {
                                    "properties": Object {
                                        "wait_sec": Object {
                                            "title": String("Wait Seconds"),
                                            "type": String("string"),
                                        },
                                        "weight": Object {
                                            "title": String("Weight"),
                                            "type": String("number"),
                                        },
                                    },
                                    "type": String("object"),
                                },
                                "title": String("Waits"),
                                "type": String("array"),
                            },
                        },
                        "title": String("Required Authorization"),
                        "type": String("object"),
                    },
                },
                "type": String("object"),
            },
            "title": String("Permissions"),
            "type": String("array"),
        },
        "privileged": Object {
            "title": String("Privileged"),
            "type": String("boolean"),
        },
        "ram_quota": Object {
            "title": String("Ram Quota"),
            "type": String("number"),
        },
        "ram_usage": Object {
            "title": String("Ram Usage"),
            "type": String("number"),
        },
        "refund_request": Object {
            "title": String("Refund Request"),
            "type": String("string"),
        },
        "self_delegated_bandwidth": Object {
            "properties": Object {
                "cpu_weigh": Object {
                    "title": String("CPU Weight"),
                    "type": String("string"),
                },
                "cpu_weight": Object {
                    "title": String("CPU Weight"),
                    "type": String("string"),
                },
                "from": Object {
                    "title": String("From"),
                    "type": String("string"),
                },
                "to": Object {
                    "title": String("To"),
                    "type": String("string"),
                },
            },
            "title": String("Self Delegated Bandwidth"),
            "type": String("object"),
        },
        "subParagraphIds": Object {
            "items": Object {
                "argoQuery": Object {
                    "idsArrayPath": Object {
                        "indexName": String("classId"),
                        "path": String("$[*].key"),
                    },
                    "selector": String("Subclasses"),
                    "where": Object {
                        "classId": String("paragraphs"),
                    },
                },
                "title": String("Sub Ducument"),
                "type": String("string"),
            },
            "title": String("First Paragraphs"),
            "type": String("array"),
        },
        "total_resources": Object {
            "properties": Object {
                "cpu_weight": Object {
                    "title": String("CPU Weight"),
                    "type": String("string"),
                },
                "net_weigh": Object {
                    "title": String("Net Weight"),
                    "type": String("string"),
                },
                "owner": Object {
                    "title": String("Owner"),
                    "type": String("string"),
                },
                "ram_bytes": Object {
                    "title": String("Ram Bytes"),
                    "type": String("number"),
                },
            },
            "title": String("Total Resources"),
            "type": String("object"),
        },
        "voter_info": Object {
            "properties": Object {
                "flags1": Object {
                    "title": String("Flags 1"),
                    "type": String("number"),
                },
                "is_proxy": Object {
                    "title": String("Is Proxy"),
                    "type": String("number"),
                },
                "last_vote_weight": Object {
                    "title": String("Last Vote Weight"),
                    "type": String("string"),
                },
                "owner": Object {
                    "title": String("Owner"),
                    "type": String("string"),
                },
                "producer": Object {
                    "title": String("Producer"),
                    "type": String("array"),
                },
                "proxied_vote_weight": Object {
                    "title": String("Proxied Vote Weight"),
                    "type": String("string"),
                },
                "proxy": Object {
                    "title": String("Proxy"),
                    "type": String("string"),
                },
                "reserved2": Object {
                    "title": String("Reserved 2"),
                    "type": String("number"),
                },
                "reserved3": Object {
                    "title": String("Reserved 3"),
                    "type": String("string"),
                },
                "staked": Object {
                    "title": String("Staked"),
                    "type": String("number"),
                },
            },
            "title": String("Voter Info"),
            "type": String("object"),
        },
    },
    "query": String("get_account_info"),
    "superClassId": String("universe"),
    "title": String("Accounts"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Propositions.svg"),
    "description": String("<p>Proposition</p>"),
    "key": String("propositions"),
    "properties": Object {
        "assetIds": Object {
            "items": Object {
                "argoQuery": Object {
                    "idsArrayPath": Object {
                        "indexName": String("classId"),
                        "path": String("$[*].key"),
                    },
                    "selector": String("Subclasses"),
                    "where": Object {
                        "classId": String("assets"),
                    },
                },
                "pattern": String("[a-z][a-z0-9-]{0,17}"),
                "title": String("Deligate to Process"),
                "type": String("string"),
            },
            "title": String("Assets"),
            "type": String("array"),
        },
        "endDate": Object {
            "format": String("date-time"),
            "title": String("End Date"),
            "type": String("string"),
        },
        "processId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("processes"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Process"),
            "type": String("string"),
        },
        "startDate": Object {
            "format": String("date-time"),
            "title": String("Start Date"),
            "type": String("string"),
        },
    },
    "superClassId": String("off-sheet"),
    "title": String("Propositions"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Agreements.svg"),
    "description": String("<p>Contracts between accounts about resources</p>"),
    "key": String("message-agree"),
    "properties": Object {
        "recardianContract": Object {
            "const": String("<div><h1>Message Agreement</h1><p><a href='${locationStr}${providerId}.smaraspaled'>${providerName}</a> promises to deliver <a href='${locationStr}${assestId}.smaraspaled'>${assetName}</a> to <a href='${locationStr}${consumerId}.smaraspaled'>${consumerName}</a> by ${expirationDate} for the amount of ${amount} ${currency}</p><ul><li>Proposition: <a href='${locationStr}${propositionId}.smaraspaled'>${propositionName}</a>  </li><li>Process: <a href='${locationStr}${processId}.smaraspaled'>${processName}</a>  </li><li>Current Step: <a href='${locationStr}${currentStepId}.smaraspaled'>${currentStepName}</a>  </li></ul></div>"),
            "contentMediaType": String("text/html"),
            "title": String("Recardian Contract"),
            "type": String("string"),
        },
    },
    "superClassId": String("agreements"),
    "title": String("Message Agreements"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Agreements.svg"),
    "description": String("<p>Contracts between accounts about resources</p>"),
    "key": String("rental-agree"),
    "properties": Object {
        "recardianContract": Object {
            "const": String("<div><h1>Rental Agreement</h1><p><a href='${locationStr}${providerId}.smaraspaled'>${providerName}</a> promises to deliver <a href='${locationStr}${assestId}.smaraspaled'>${assetName}</a> to <a href='${locationStr}${consumerId}.smaraspaled'>${consumerName}</a> by ${expirationDate} for the amount of ${amount} ${currency}</p><ul><li>Proposition: <a href='${locationStr}${propositionId}.smaraspaled'>${propositionName}</a>  </li><li>Process: <a href='${locationStr}${processId}.smaraspaled'>${processName}</a>  </li><li>Current Step: <a href='${locationStr}${currentStepId}.smaraspaled'>${currentStepName}</a>  </li></ul></div>"),
            "contentMediaType": String("text/html"),
            "title": String("Recardian Contract"),
            "type": String("string"),
        },
        "unitOfTime": Object {
            "enum": Array [
                String("Half Day"),
                String("Day"),
                String("Week"),
                String("Month"),
                String("Year"),
            ],
            "title": String("Duration"),
            "type": String("string"),
        },
    },
    "superClassId": String("agreements"),
    "title": String("Rental Agreements"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Propositions.svg"),
    "description": String("<p>Proposition</p>"),
    "key": String("propositions"),
    "properties": Object {
        "assetIds": Object {
            "items": Object {
                "argoQuery": Object {
                    "idsArrayPath": Object {
                        "indexName": String("classId"),
                        "path": String("$[*].key"),
                    },
                    "selector": String("Subclasses"),
                    "where": Object {
                        "classId": String("assets"),
                    },
                },
                "pattern": String("[a-z][a-z0-9-]{0,17}"),
                "title": String("Deligate to Process"),
                "type": String("string"),
            },
            "title": String("Assets"),
            "type": String("array"),
        },
        "endDate": Object {
            "format": String("date-time"),
            "title": String("End Date"),
            "type": String("string"),
        },
        "processId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("processes"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Process"),
            "type": String("string"),
        },
        "startDate": Object {
            "format": String("date-time"),
            "title": String("Start Date"),
            "type": String("string"),
        },
    },
    "superClassId": String("off-sheet"),
    "title": String("Propositions"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Agreements.svg"),
    "description": String("<p>Contracts between accounts about resources</p>"),
    "key": String("purchase-agree"),
    "properties": Object {
        "recardianContract": Object {
            "const": String("<div><h1>Purchase Agreement</h1><p><a href='${locationStr}${providerId}.smaraspaled'>${providerName}</a> promises to deliver <a href='${locationStr}${assestId}.smaraspaled'>${assetName}</a> to <a href='${locationStr}${consumerId}.smaraspaled'>${consumerName}</a> by ${expirationDate} for the amount of ${amount} ${currency}</p><ul><li>Proposition: <a href='${locationStr}${propositionId}.smaraspaled'>${propositionName}</a>  </li><li>Process: <a href='${locationStr}${processId}.smaraspaled'>${processName}</a>  </li><li>Current Step: <a href='${locationStr}${currentStepId}.smaraspaled'>${currentStepName}</a>  </li></ul></div>"),
            "contentMediaType": String("text/html"),
            "title": String("Recardian Contract"),
            "type": String("string"),
        },
    },
    "superClassId": String("agreements"),
    "title": String("Purchase Agreements"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Propositions.svg"),
    "description": String("<p>Proposition</p>"),
    "key": String("propositions"),
    "properties": Object {
        "assetIds": Object {
            "items": Object {
                "argoQuery": Object {
                    "idsArrayPath": Object {
                        "indexName": String("classId"),
                        "path": String("$[*].key"),
                    },
                    "selector": String("Subclasses"),
                    "where": Object {
                        "classId": String("assets"),
                    },
                },
                "pattern": String("[a-z][a-z0-9-]{0,17}"),
                "title": String("Deligate to Process"),
                "type": String("string"),
            },
            "title": String("Assets"),
            "type": String("array"),
        },
        "endDate": Object {
            "format": String("date-time"),
            "title": String("End Date"),
            "type": String("string"),
        },
        "processId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("processes"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("Process"),
            "type": String("string"),
        },
        "startDate": Object {
            "format": String("date-time"),
            "title": String("Start Date"),
            "type": String("string"),
        },
    },
    "superClassId": String("off-sheet"),
    "title": String("Propositions"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Processes.svg"),
    "description": String("<p>Processes</p>"),
    "key": String("sub-processes"),
    "properties": Object {
        "firstStepId": Object {
            "argoQuery": Object {
                "idsArrayPath": Object {
                    "indexName": String("classId"),
                    "path": String("$[*].key"),
                },
                "selector": String("Subclasses"),
                "sortBy": String("name"),
                "where": Object {
                    "classId": String("open"),
                },
            },
            "pattern": String("[a-z][a-z0-9-]{0,17}"),
            "title": String("First Step"),
            "type": String("string"),
        },
        "returnActions": Object {
            "items": Object {
                "type": String("string"),
            },
            "title": String("Return Actions"),
            "type": String("array"),
        },
    },
    "superClassId": String("off-sheet"),
    "title": String("Sub-Processes"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "description": String("<p>Messaging Agreements between owners</p>"),
    "key": String("messaging-prop"),
    "properties": Object {
        "classification": Object {
            "enum": Array [
                String("Question"),
                String("Defect"),
                String("Enhancement"),
            ],
            "title": String("Classification"),
            "type": String("string"),
        },
    },
    "superClassId": String("propositions"),
    "title": String("Messaging Proposition"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("Agreements.svg"),
    "description": String("<p>Contracts between accounts about resources</p>"),
    "key": String("service-agree"),
    "properties": Object {
        "recardianContract": Object {
            "const": String("<div><h1>Service Agreement</h1><p><a href='${locationStr}${providerId}.smaraspaled'>${providerName}</a> promises to deliver <a href='${locationStr}${assestId}.smaraspaled'>${assetName}</a> to <a href='${locationStr}${consumerId}.smaraspaled'>${consumerName}</a> by ${expirationDate} for the amount of ${amount} ${currency}</p><ul><li>Proposition: <a href='${locationStr}${propositionId}.smaraspaled'>${propositionName}</a>  </li><li>Process: <a href='${locationStr}${processId}.smaraspaled'>${processName}</a>  </li><li>Current Step: <a href='${locationStr}${currentStepId}.smaraspaled'>${currentStepName}</a>  </li></ul></div>"),
            "contentMediaType": String("text/html"),
            "title": String("Recardian Contract"),
            "type": String("string"),
        },
    },
    "superClassId": String("agreements"),
    "title": String("Service Agreements"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "description": String("<p>Organizations owned by users/organizations</p>"),
    "key": String("organizations"),
    "properties": Object {
        "description": Object {
            "placeholder": String("<p>[What do you do that is different?]</p>"),
            "title": String("What"),
        },
        "how": Object {
            "contentMediaType": String("text/html"),
            "maxLength": Number(10000),
            "minLength": Number(0),
            "placeholder": String("<p>[How do you achive your goal?]</p>"),
            "title": String("How"),
            "type": String("string"),
        },
        "why": Object {
            "contentMediaType": String("text/html"),
            "maxLength": Number(10000),
            "minLength": Number(0),
            "placeholder": String("<p>[Vision]</p>"),
            "title": String("Why"),
            "type": String("string"),
        },
    },
    "superClassId": String("accounts"),
    "title": String("Organizations"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),
}
merged_ancestors: 
Object {
    "classIcon": String("BalanceSheet.svg"),
    "description": String("<p>Balance sheet owned by users/organizations</p>"),
    "key": String("balance-sheet"),
    "properties": Object {
        "currency": Object {
            "enum": Array [
                String("EUR"),
                String("USD"),
            ],
            "title": String("Currency"),
            "type": String("string"),
        },
        "value": Object {
            "title": String("Value"),
            "type": String("number"),
        },
    },
    "superClassId": String("resources"),
    "title": String("Balance Sheet"),
    "type": String("object"),\